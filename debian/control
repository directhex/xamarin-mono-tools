Source: mono-tools
Section: devel
Priority: optional
Maintainer: Debian Mono Group <pkg-mono-group@lists.alioth.debian.org>
Uploaders: Mirco Bauer <meebey@meebey.net>, Sebastian Dröge <slomo@ubuntu.com>
Build-Depends: debhelper (>= 5.0.0), dpatch
Build-Depends-Indep: cli-common-dev (>= 0.4.0), pkg-config, mono-mcs (>= 1.0), mono-gmcs (>= 1.0), libmono-dev (>= 1.0), mono-gac (>= 1.0), libnunit2.2-cil (>= 2.2.0), libgtk2.0-cil (>= 2.0), libgnome2.0-cil (>= 2.0), libgconf2.0-cil (>= 2.0), libglade2.0-cil (>= 2.0), libgecko2.0-cil (>= 0.10), monodoc-base (>= 1.1.9)
Standards-Version: 3.7.2

Package: monodoc-browser
Provides: monodoc-viewer
Replaces: monodoc-base (<< 1.1.9)
Architecture: all
Recommends: lynx
#Recommends: lynx, mono-tools-locales
Depends: ${cli:Depends}, monodoc-manual
Description: MonoDoc GTK+ based viewer
 The MonoDoc Project is the documentation framework of the Mono project which
 provides detailed API documentation for all Mono components and the Mono CLI
 implementation.
 .
 This package contains the GTK+ based viewer of the Mono documentation.

Package: gnunit
Architecture: all
Depends: ${cli:Depends}
Recommends: mono-tools-locales
Description: frontend for running NUnit 2 test suites
 gnunit (formerly known as nunit-gtk) is a frontend for NUnit which uses
 the Mono class library version 1.0.
 .
 NUnit is a unit testing framework for all .NET languages. It serves the
 same purpose as JUnit does in the Java world. It supports test
 categories, testing for exceptions and writing test results in plain
 text or XML.

Package: gnunit2
Architecture: all
Depends: ${cli:Depends}
#Recommends: mono-tools-locales
Description: frontend for running NUnit 2 test suites
 gnunit2 (formerly known as nunit-gtk) is a frontend for NUnit which uses
 the Mono class library version 2.0.
 .
 NUnit is a unit testing framework for all .NET languages. It serves the
 same purpose as JUnit does in the Java world. It supports test
 categories, testing for exceptions and writing test results in plain
 text or XML.

#Package: gasnview
#Architecture: all
#Depends: ${cli:Depends}
#Replaces: gnunit (<< 1.2.1)
#Description: ASN.1 Viewer for Gnome
# gasnview is a Gnome application for viewing and editing ASN.1 encoded data.
# .
# ASN.1 is a standard for describing data structures in a implementation and
# language independent way.

#Package: create-native-map
#Architecture: all
#Depends: ${cli:Depends}
#Description: C/C# Mapping Creator
# create-native-map is a program for a specific scenario: keeping code which
# is tightly coupled between C and C# in sync with each other, based upon
# the C# types.
# .
# Platform Invoke is only useful if the managed code knows the exact types
# and layout of all unmanaged structures it uses. This is usually the case
# on Windows, but it is not the case on Unix. For example, struct stat makes
# use of types with sizes that will vary from platform to platform (or even
# based on the compiler macros defined!). For example, off_t is usually a
# signed 32-bit integer on ILP32 platforms, but may be a signed 64-bit integer
# on LP64 platforms, but may also be a 64-bit signed integer on ILP32 platforms
# if the _FILE_OFFSET_BITS macro has the value 64. In short, everything is
# flexible within Unix, and managed code can’t deal with such flexibility.
# .
# Thus, the niche for create-native-map: assume a fixed ABI that managed code 
# can target, and generate code to "thunk" the managed representations to the
# corresponding native representations. This needs to be done for everything
# that can vary between platforms and compiler flags, from enumeration values
# (SIGBUS has the value 10 on FreeBSD but 7 on Linux) to structure
# members (how big is off_t?).

#Package: mono-tools-locales
#Architecture: all
#Description: Translations for mono-tools
#  This package contains the translations for various packages from
#  mono-tools, namely gnunit, gnunit2 and monodoc-browser.

