#! /bin/sh /usr/share/dpatch/dpatch-run

@DPATCH@

--- mono-tools/configure.in.old	2006-02-23 20:31:16.598094984 +0100
+++ mono-tools/configure.in	2006-02-23 20:35:53.522996000 +0100
@@ -38,22 +38,22 @@
 
 
 #PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0)
-PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp glade-sharp gconf-sharp)
+PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0)
 AC_SUBST(GTK_SHARP_LIBS)
 
 
-PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp, enable_gtkhtml=yes, enable_gtkhtml=no)
+PKG_CHECK_MODULES(GTKHTML_SHARP, gtkhtml-sharp-2.0, enable_gtkhtml=yes, enable_gtkhtml=no)
 AC_SUBST(GTKHTML_SHARP_LIBS)
 AM_CONDITIONAL(ENABLE_GTKHTML, test "x$enable_gtkhtml" = "xyes")
 
 
-PKG_CHECK_MODULES(GECKO_SHARP, gecko-sharp = 0.6, enable_gecko=yes, enable_gecko=no)
+PKG_CHECK_MODULES(GECKO_SHARP, gecko-sharp-2.0 >= 0.6, enable_gecko=yes, enable_gecko=no)
 AC_SUBST(GECKO_SHARP_LIBS)
 AM_CONDITIONAL(ENABLE_GECKO, test "x$enable_gecko" = "xyes")
 
 if test "x$enable_gecko" = "xyes"; then
    # get the mozilla home directory
-   MOZILLA_HOME="`$PKG_CONFIG --variable=libdir mozilla-gtkmozembed`"
+   MOZILLA_HOME="`$PKG_CONFIG --variable=libdir firefox-gtkmozembed`"
    AC_SUBST(MOZILLA_HOME)
 fi
 
--- mono-tools/configure.old	2006-02-23 20:31:19.705622568 +0100
+++ mono-tools/configure	2006-02-23 20:35:59.262123520 +0100
@@ -2366,23 +2366,23 @@
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for gtk-sharp glade-sharp gconf-sharp" >&5
-echo $ECHO_N "checking for gtk-sharp glade-sharp gconf-sharp... $ECHO_C" >&6
+        echo "$as_me:$LINENO: checking for gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0" >&5
+echo $ECHO_N "checking for gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "gtk-sharp glade-sharp gconf-sharp" ; then
+        if $PKG_CONFIG --exists "gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking GTK_SHARP_CFLAGS" >&5
 echo $ECHO_N "checking GTK_SHARP_CFLAGS... $ECHO_C" >&6
-            GTK_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gtk-sharp glade-sharp gconf-sharp"`
+            GTK_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0"`
             echo "$as_me:$LINENO: result: $GTK_SHARP_CFLAGS" >&5
 echo "${ECHO_T}$GTK_SHARP_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking GTK_SHARP_LIBS" >&5
 echo $ECHO_N "checking GTK_SHARP_LIBS... $ECHO_C" >&6
-            GTK_SHARP_LIBS=`$PKG_CONFIG --libs "gtk-sharp glade-sharp gconf-sharp"`
+            GTK_SHARP_LIBS=`$PKG_CONFIG --libs "gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0"`
             echo "$as_me:$LINENO: result: $GTK_SHARP_LIBS" >&5
 echo "${ECHO_T}$GTK_SHARP_LIBS" >&6
         else
@@ -2390,7 +2390,7 @@
             GTK_SHARP_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            GTK_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtk-sharp glade-sharp gconf-sharp"`
+            GTK_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0"`
             echo $GTK_SHARP_PKG_ERRORS
         fi
 
@@ -2405,8 +2405,8 @@
   if test $succeeded = yes; then
      :
   else
-     { { echo "$as_me:$LINENO: error: Library requirements (gtk-sharp glade-sharp gconf-sharp) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
-echo "$as_me: error: Library requirements (gtk-sharp glade-sharp gconf-sharp) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
+     { { echo "$as_me:$LINENO: error: Library requirements (gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
+echo "$as_me: error: Library requirements (gtk-sharp-2.0 glade-sharp-2.0 gconf-sharp-2.0) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
    { (exit 1); exit 1; }; }
   fi
 
@@ -2467,23 +2467,23 @@
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for gtkhtml-sharp" >&5
+        echo "$as_me:$LINENO: checking for gtkhtml-sharp-2.0" >&5
 echo $ECHO_N "checking for gtkhtml-sharp... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "gtkhtml-sharp" ; then
+        if $PKG_CONFIG --exists "gtkhtml-sharp-2.0" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking GTKHTML_SHARP_CFLAGS" >&5
 echo $ECHO_N "checking GTKHTML_SHARP_CFLAGS... $ECHO_C" >&6
-            GTKHTML_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gtkhtml-sharp"`
+            GTKHTML_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gtkhtml-sharp-2.0"`
             echo "$as_me:$LINENO: result: $GTKHTML_SHARP_CFLAGS" >&5
 echo "${ECHO_T}$GTKHTML_SHARP_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking GTKHTML_SHARP_LIBS" >&5
 echo $ECHO_N "checking GTKHTML_SHARP_LIBS... $ECHO_C" >&6
-            GTKHTML_SHARP_LIBS=`$PKG_CONFIG --libs "gtkhtml-sharp"`
+            GTKHTML_SHARP_LIBS=`$PKG_CONFIG --libs "gtkhtml-sharp-2.0"`
             echo "$as_me:$LINENO: result: $GTKHTML_SHARP_LIBS" >&5
 echo "${ECHO_T}$GTKHTML_SHARP_LIBS" >&6
         else
@@ -2491,7 +2491,7 @@
             GTKHTML_SHARP_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            GTKHTML_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtkhtml-sharp"`
+            GTKHTML_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gtkhtml-sharp-2.0"`
 
         fi
 
@@ -2576,23 +2576,23 @@
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for gecko-sharp = 0.6" >&5
-echo $ECHO_N "checking for gecko-sharp = 0.6... $ECHO_C" >&6
+        echo "$as_me:$LINENO: checking for gecko-sharp-2.0 >= 0.6" >&5
+echo $ECHO_N "checking for gecko-sharp-2.0 >= 0.6... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "gecko-sharp = 0.6" ; then
+        if $PKG_CONFIG --exists "gecko-sharp-2.0 >= 0.6" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking GECKO_SHARP_CFLAGS" >&5
 echo $ECHO_N "checking GECKO_SHARP_CFLAGS... $ECHO_C" >&6
-            GECKO_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gecko-sharp = 0.6"`
+            GECKO_SHARP_CFLAGS=`$PKG_CONFIG --cflags "gecko-sharp-2.0 >= 0.6"`
             echo "$as_me:$LINENO: result: $GECKO_SHARP_CFLAGS" >&5
 echo "${ECHO_T}$GECKO_SHARP_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking GECKO_SHARP_LIBS" >&5
 echo $ECHO_N "checking GECKO_SHARP_LIBS... $ECHO_C" >&6
-            GECKO_SHARP_LIBS=`$PKG_CONFIG --libs "gecko-sharp = 0.6"`
+            GECKO_SHARP_LIBS=`$PKG_CONFIG --libs "gecko-sharp-2.0 >= 0.6"`
             echo "$as_me:$LINENO: result: $GECKO_SHARP_LIBS" >&5
 echo "${ECHO_T}$GECKO_SHARP_LIBS" >&6
         else
@@ -2600,7 +2600,7 @@
             GECKO_SHARP_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            GECKO_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gecko-sharp = 0.6"`
+            GECKO_SHARP_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "gecko-sharp-2.0 >= 0.6"`
 
         fi
 
@@ -2632,7 +2632,7 @@
 
 if test "x$enable_gecko" = "xyes"; then
    # get the mozilla home directory
-   MOZILLA_HOME="`$PKG_CONFIG --variable=libdir mozilla-gtkmozembed`"
+   MOZILLA_HOME="`$PKG_CONFIG --variable=libdir firefox-gtkmozembed`"
 
 fi
 
